# ---------- build stage ----------
FROM maven:3.9.6-eclipse-temurin-21 AS build
WORKDIR /app
COPY pom.xml .
RUN mvn -q -B dependency:go-offline
COPY src ./src
RUN mvn -q -DskipTests clean package

# ---------- run stage ----------
FROM eclipse-temurin:21-jre-jammy
WORKDIR /app

# create unprivileged user
RUN useradd -r -s /usr/sbin/nologin appuser

ENV SPRING_PROFILES_ACTIVE=docker
ENV JAVA_OPTS=""

EXPOSE 8092

# copy *all* jars, then select the fat (repackaged) one
COPY --from=build /app/target/*.jar /app/

# pick the first non-plain jar and rename to app.jar
RUN set -eux; \
    JAR="$(ls /app/*.jar | grep -v -- '-plain\.jar$' | head -n1 || true)"; \
    if [ -z "$JAR" ]; then echo "No runnable JAR found in /app:"; ls -l /app; exit 1; fi; \
    mv "$JAR" /app/app.jar; \
    chown appuser:appuser /app/app.jar; \
    ls -l /app

HEALTHCHECK --interval=30s --timeout=3s --start-period=20s --retries=3 \
  CMD bash -lc '</dev/tcp/127.0.0.1/8092' || exit 1

USER appuser
ENTRYPOINT ["sh","-lc","exec java $JAVA_OPTS -jar /app/app.jar"]

# syntax=docker/dockerfile:1.7

############################
# BUILD STAGE
############################
FROM golang:1.24 AS build
WORKDIR /src

# Tools for go mod download
RUN apt-get update && \
    apt-get install -y --no-install-recommends git ca-certificates tzdata && \
    rm -rf /var/lib/apt/lists/*

# Resilient module proxy chain
RUN go env -w GOPROXY=https://proxy.golang.org,https://goproxy.cn,direct && \
    go env -w GOSUMDB=sum.golang.org

# Copy mod files first (cacheable layer)
COPY go.mod ./
COPY go.sum ./

# Download deps (show commands with -x)
RUN --mount=type=cache,target=/go/pkg/mod \
    go mod download -x

# Copy the rest of the source
COPY . .

# Tidy (keeps go.sum correct)
RUN --mount=type=cache,target=/go/pkg/mod \
    go mod tidy -v

# Build a static binary
RUN CGO_ENABLED=0 GOFLAGS="-trimpath" go build -o /out/generate-report ./main.go

############################
# RUNTIME STAGE
############################
FROM gcr.io/distroless/base-debian12
WORKDIR /
ENV PORT=8093
ENV APP_ENV=production
ENV KAFKA_BROKERS=kafka:9092
ENV KAFKA_TOPIC=report-requests
ENV REPORT_BASE_URL=http://report:3042
COPY --from=build /out/generate-report /generate-report
USER nonroot:nonroot
EXPOSE 8093
ENTRYPOINT ["/generate-report"]

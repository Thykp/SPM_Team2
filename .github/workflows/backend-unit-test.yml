name: Backend Unit and Integration Tests

on:
  pull_request:
    branches: [main]
    paths:
      - 'backend/**'
  push:
    branches: [main]
    paths:
      - 'backend/**'


concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  profile_tests:
    name: Node — atomic/profile tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/services/atomic/profile
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend/services/atomic/profile/package-lock.json
      - run: npm ci
      - run: npm test -- --coverage

  project_tests:
    name: Node — atomic/project tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/services/atomic/project
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend/services/atomic/project/package-lock.json
      - run: npm ci
      - run: npm test -- --coverage

  task_tests:
    name: Node — atomic/task tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/services/atomic/task
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend/services/atomic/task/package-lock.json
      - run: npm ci
      - name: Run tests with Supabase authentication
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_API_KEY: ${{ secrets.SUPABASE_API_KEY }}
        run: npm test -- --coverage

  report_tests:
    name: Node — atomic/report tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/services/atomic/report
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend/services/atomic/report/package-lock.json
      - run: npm ci
      - name: Run tests with Supabase authentication
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_API_KEY: ${{ secrets.SUPABASE_API_KEY }}
        run: npm test -- --coverage

  manage_account_tests:
    name: Go — composite/manage-account tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/services/composite/manage-account
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - run: go test ./... -race -covermode=atomic -coverprofile=coverage.out

  manage_task_tests:
    name: Springboot — composite/manage-task tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/services/composite/manage-task
    steps:
        - name: Checkout code
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        
        - name: Setup JDK
          uses: actions/setup-java@v4
          with:
            java-version: '17'
            distribution: 'temurin'

        - name: Cache Maven packages
          uses: actions/cache@v4
          with:
            path: ~/.m2/repository
            key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            restore-keys: |
              ${{ runner.os }}-maven-

        - name: Give execute permission to mvnw
          run: chmod +x mvnw

        - name: Run unit tests
          run: ./mvnw clean test

  organise_project_tests:
    name: Springboot — composite/organise-project tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/services/composite/organise-project
    steps:
        - name: Checkout code
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        
        - name: Setup JDK
          uses: actions/setup-java@v4
          with:
            java-version: '17'
            distribution: 'temurin'

        - name: Cache Maven packages
          uses: actions/cache@v4
          with:
            path: ~/.m2/repository
            key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            restore-keys: |
              ${{ runner.os }}-maven-

        - name: Give execute permission to mvnw
          run: chmod +x mvnw

        - name: Run unit tests
          run: ./mvnw clean test

  generate_report_tests:
    name: Go — composite/generate-report tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/services/composite/generate-report
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Run Go tests with coverage
        run: |
          go mod tidy
          go test -v -coverpkg=./... -coverprofile=coverage.out ./test/...
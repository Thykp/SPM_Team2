name: SonarQube Scan

on:
  pull_request:
    branches: [main]
    paths: ['backend/**','.github/workflows/**']
  push:
    branches: [main]
    paths: ['backend/**','.github/workflows/**']
  workflow_dispatch: 

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  node_profile:
    name: atomic/profile – test & sonar
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/services/atomic/profile
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend/services/atomic/profile/package-lock.json
      - run: npm ci
      - run: npm test --if-present -- --coverage --coverageReporters=lcov
      - name: Sonar scan (Cloud)
        uses: SonarSource/sonarqube-scan-action@v5
        continue-on-error: true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: backend/services/atomic/profile
          args: >
            -Dsonar.qualitygate.wait=false

  node_report:
    name: atomic/report – test & sonar
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/services/atomic/report
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_API_KEY: ${{ secrets.SUPABASE_API_KEY }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend/services/atomic/report/package-lock.json
      - run: npm ci
      - run: npm test --if-present -- --coverage --coverageReporters=lcov
      - name: Sonar scan (Cloud)
        uses: SonarSource/sonarqube-scan-action@v5
        continue-on-error: true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: backend/services/atomic/report
          args: >
            -Dsonar.qualitygate.wait=false

  node_task:
    name: atomic/task – test & sonar
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/services/atomic/task
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_API_KEY: ${{ secrets.SUPABASE_API_KEY }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend/services/atomic/task/package-lock.json
      - run: npm ci
      - run: npm test --if-present -- --coverage --coverageReporters=lcov
      - name: Sonar scan (Cloud)
        uses: SonarSource/sonarqube-scan-action@v5
        continue-on-error: true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: backend/services/atomic/task
          args: >
            -Dsonar.qualitygate.wait=false

  node_project:
    name: atomic/project – test & sonar
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/services/atomic/project
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_API_KEY: ${{ secrets.SUPABASE_API_KEY }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend/services/atomic/project/package-lock.json
      - run: npm ci
      - run: npm test --if-present -- --coverage --coverageReporters=lcov
      - name: Sonar scan (Cloud)
        uses: SonarSource/sonarqube-scan-action@v5
        continue-on-error: true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: backend/services/atomic/task
          args: >
            -Dsonar.qualitygate.wait=false

  node_notifications:
    name: atomic/notifications – test & sonar
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/services/atomic/notifications
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend/services/atomic/notifications/package-lock.json
      - run: npm ci
      - run: npm test --if-present -- --coverage --coverageReporters=lcov
      - name: Sonar scan (Cloud)
        uses: SonarSource/sonarqube-scan-action@v5
        continue-on-error: true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: backend/services/atomic/notifications
          args: >
            -Dsonar.qualitygate.wait=false

  go_manage_account:
    name: composite/manage-account – test & sonar
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/services/composite/manage-account
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - run: go test ./... -covermode=atomic -coverprofile=coverage.out
      - name: Sonar scan (Cloud)
        uses: SonarSource/sonarqube-scan-action@v5
        continue-on-error: true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: backend/services/composite/manage-account
          args: >
            -Dsonar.qualitygate.wait=false

  go_generate_report:
    name: composite/generate-report – test & sonar
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/services/composite/generate-report
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - run: go test -v -coverpkg=./... -coverprofile=coverage.out ./test/...
      - name: Sonar scan (Cloud)
        uses: SonarSource/sonarqube-scan-action@v5
        continue-on-error: true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: backend/services/composite/generate-report
          args: >
            -Dsonar.qualitygate.wait=false
  
  java_manage_task:
    name: composite/manage-task - sonar
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/services/composite/manage-task
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: Give execute permission to mvnw
        run: chmod +x mvnw

      - name: Build and analyze
        run: |
          ./mvnw clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.organization=thykp \
            -Dsonar.projectKey=thykp_SPM_Team2.composite.manage-task \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

  java_organise_project:
    name: composite/organise-project - sonar
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/services/composite/organise-project
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: Give execute permission to mvnw
        run: chmod +x mvnw

      - name: Build and analyze
        run: |
          ./mvnw clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.organization=thykp \
            -Dsonar.projectKey=thykp_SPM_Team2.composite.organise-project \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

  node_manage_notification:
    name: composite/manage-notification – test & sonar
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/services/composite/manage-notification
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend/services/composite/manage-notification/package-lock.json
      - run: npm ci
      - run: npm test --if-present -- --coverage --coverageReporters=lcov
      - name: Sonar scan (Cloud)
        uses: SonarSource/sonarqube-scan-action@v5
        continue-on-error: true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: backend/services/composite/manage-notification
          args: >
            -Dsonar.qualitygate.wait=false


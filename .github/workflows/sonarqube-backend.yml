name: SonarQube Scan

on:
  pull_request:
    branches: [main]
    paths: ['backend/**']
  push:
    branches: [main]
    paths: ['backend/**']
  workflow_dispatch: 

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  node_profile:
    name: atomic/profile – test & sonar
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/services/atomic/profile
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend/services/atomic/profile/package-lock.json
      - run: npm ci
      - run: npm test --if-present -- --coverage --coverageReporters=lcov
      - name: Sonar scan (Cloud)
        uses: SonarSource/sonarqube-scan-action@v5
        continue-on-error: true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: backend/services/atomic/profile
          args: >
            -Dsonar.qualitygate.wait=false

  node_report:
    name: atomic/report – test & sonar
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/services/atomic/report
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend/services/atomic/report/package-lock.json
      - run: npm ci
      - run: npm test --if-present -- --coverage --coverageReporters=lcov
      - name: Sonar scan (Cloud)
        uses: SonarSource/sonarqube-scan-action@v5
        continue-on-error: true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: backend/services/atomic/report
          args: >
            -Dsonar.qualitygate.wait=false

  go_manage_account:
    name: composite/manage-account – test & sonar
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/services/composite/manage-account
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - run: go test ./... -covermode=atomic -coverprofile=coverage.out
      - name: Sonar scan (Cloud)
        uses: SonarSource/sonarqube-scan-action@v5
        continue-on-error: true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: backend/services/composite/manage-account
          args: >
            -Dsonar.qualitygate.wait=false
